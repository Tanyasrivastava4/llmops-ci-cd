name: RAG CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # -------------------------------
      # 1Ô∏è‚É£ Checkout the code
      # -------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------------
      # 2Ô∏è‚É£ Set up Python
      # -------------------------------
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # -------------------------------
      # 3Ô∏è‚É£ Install dependencies
      # -------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # üëá This step downloads the model dynamically
      - name: Download model
        run: |
          python -c "from transformers import AutoModelForSeq2SeqLM, AutoTokenizer; \
          AutoModelForSeq2SeqLM.from_pretrained('google/flan-t5-base'); \
          AutoTokenizer.from_pretrained('google/flan-t5-base')"

      # üëá This caches the model for later runs
      - uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          key: ${{ runner.os }}-hf-cache

      # -------------------------------
      # 4Ô∏è‚É£ Run tests
      # -------------------------------
      - name: Run pytest
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q

      # -------------------------------
      # 5Ô∏è‚É£ Clean workspace
      # -------------------------------
      - name: Clean workspace
        run: |
          mkdir -p outputs
          rm -rf outputs/*
          rm -rf .cache/*

      # -------------------------------
      # 6Ô∏è‚É£ Run RAG pipeline (HF login)
      # -------------------------------
      #- name: Run RAG pipeline with HF login
       # env:
        #  HF_TOKEN: ${{ secrets.HF_TOKEN }}
        #run: |
         # python -c "import os; from huggingface_hub import login; login(token=os.environ['HF_TOKEN'])"
          #python rag_systems/run_rag_pipeline.py

         # 7Ô∏è‚É£ Run RAG pipeline with HF login
      # -------------------------------
     # - name: Run RAG pipeline
     #   env:
     #     HF_TOKEN: ${{ secrets.HF_TOKEN }}
    #      MODEL_NAME: google/flan-t5-base
    #    run: |
    #      python -c "import os; from huggingface_hub import login; login(token=os.environ['HF_TOKEN'])"
    #      python rag_systems/run_rag_pipeline.py


            # -------------------------------
      - name: Run RAG pipeline with LangSmith logging
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
          LANGCHAIN_PROJECT: "RAG_Pipeline"
          LANGCHAIN_TRACING_V2: "true"
          MODEL_NAME: google/flan-t5-base
        run: |
          echo "üîë Logging into Hugging Face..."
          python -c "import os; from huggingface_hub import login; login(token=os.environ['HF_TOKEN'])"

          echo "üìä LangSmith tracking enabled for project: $LANGCHAIN_PROJECT"
          python rag_systems/run_rag_pipeline.py
      
      # -------------------------------
      # 7Ô∏è‚É£ Upload pipeline results
      # -------------------------------
      - name: Upload model_responses.csv as artifact
        uses: actions/upload-artifact@v4
        with:
          name: model_responses
          path: outputs/model_responses.csv
          

      # -------------------------------
      # 8Ô∏è‚É£ Deploy to SaladCloud using deploy.py
      # -------------------------------
      - name: Deploy to SaladCloud
        env:
          SALAD_API_KEY: ${{ secrets.SALAD_API_KEY }}
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          ORGANIZATION_NAME: "intileo"
          PROJECT_NAME: "replit"
          IMAGE_NAME: "docker.io/tanyasrivastava930/rag_systems:latest"
          CONTAINER_NAME: "rag-llmops-deploy"
          GPU_TYPE: "ed563892-aacd-40f5-80b7-90c9be6c759b"
        run: |
          pip install --upgrade salad-cloud-sdk python-dotenv
          echo "‚úÖ Dependencies installed."
          python deploy.py
#  zap_scan:
#    runs-on: ubuntu-latest
#    needs: build-test-deploy
#    steps:
#      - name: OWASP ZAP baseline scan
#        uses: zaproxy/action-baseline@v0.12.0
#        with:
#          target: "https://rag-llmops-deploy.salad.cloud"  # ‚úÖ Replace with your deployed endpoint
#          cmd_options: "-a"
