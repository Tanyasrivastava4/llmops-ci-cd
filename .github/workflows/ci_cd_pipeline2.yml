#name: RAG CI/CD Pipeline

#on:
#  push:
#    branches:
 #     - main
 # pull_request:
  #  branches:
   #   - main

#jobs:
 # build-and-test:
  #  runs-on: ubuntu-latest
   # steps:
      # -------------------------------
      # 1. Checkout code
      # -------------------------------
    #  - name: Checkout repository
     #   uses: actions/checkout@v3

      # -------------------------------
      # 2. Set up Python
      # -------------------------------
     # - name: Set up Python 3.11
      #  uses: actions/setup-python@v5
       # with:
        #  python-version: 3.11

      # -------------------------------
      # 3. Install dependencies
      # -------------------------------
     # - name: Install dependencies
      #  run: |
       #   python -m pip install --upgrade pip
        #  pip install -r requirements.txt

      # -------------------------------
      # 4. Run tests
      # -------------------------------
     # - name: Run pytest
      #  run: |
       #   pytest tests/ --maxfail=1 --disable-warnings -q

      # -------------------------------
      # 5. Clean workspace (free up space)
      # -------------------------------
    #  - name: Clean workspace
     #   run: |
      #    rm -rf outputs/*
       #   rm -rf .cache/*

      # -------------------------------
      # 6. Run RAG pipeline with HF login
      # -------------------------------
    #  - name: Run RAG pipeline with HF login
     #   env:
      #    HF_TOKEN: ${{ secrets.HF_TOKEN }}
       # run: |
       #   python -c "from huggingface_hub import login; login(token='$HF_TOKEN')"
        #  python rag_systems/run_rag_pipeline.py

      # -------------------------------
      # 7. Upload model_responses.csv as artifact
      # -------------------------------
     # - name: Upload results
      #  uses: actions/upload-artifact@v4
       # with:
        #  name: model_responses
         # path: outputs/model_responses.csv





#name: RAG CI/CD Pipeline

#on:
 # push:
  #  branches:
   #   - main
#  pull_request:
 #   branches:
  #    - main

#jobs:
 # build-and-test:
  #  runs-on: ubuntu-latest
   # steps:
      # -------------------------------
      # 1. Checkout code
      # -------------------------------
    #  - name: Checkout repository
     #   uses: actions/checkout@v3

      # -------------------------------
      # 2. Set up Python
      # -------------------------------
      #- name: Set up Python 3.11
      #  uses: actions/setup-python@v5
      #  with:
      #    python-version: 3.11

      # -------------------------------
      # 3. Install dependencies
      # -------------------------------
    #  - name: Install dependencies
     #   run: |
      #    python -m pip install --upgrade pip
       #   pip install -r requirements.txt

      # -------------------------------
      # 4. Run tests
      # -------------------------------
    #  - name: Run pytest
     #   run: |
      #    pytest tests/ --maxfail=1 --disable-warnings -q

      # -------------------------------
      # 5. Clean workspace (free up space)
      # -------------------------------
    #  - name: Clean workspace
    #    run: |
     #     rm -rf outputs/*
      #    rm -rf .cache/*

      # -------------------------------
      # 6. Run RAG pipeline with HF login
      # -------------------------------
     # - name: Run RAG pipeline with HF login
     #   env:
      #    HF_TOKEN: ${{ secrets.HF_TOKEN }}
      #  run: |
       #   python -c "from huggingface_hub import login; login(token='$HF_TOKEN')"
        #  python rag_systems/run_rag_pipeline.py

      # -------------------------------
      # 7. Upload model_responses.csv as artifact
      # -------------------------------
     # - name: Upload results
      #  uses: actions/upload-artifact@v4
     #   with:
      #    name: model_responses
       #   path: outputs/model_responses.csv

 # deploy:
  #  needs: build-and-test
   # runs-on: ubuntu-latest
    #steps:
      # -------------------------------
      # 1. Checkout code
      # -------------------------------
    #  - name: Checkout repository
    #    uses: actions/checkout@v3

      # -------------------------------
      # 2. Install Salad CLI
      # -------------------------------
    #  - name: Install Salad CLI
        #run: pip install salad-cli
    #    run: pip install --upgrade salad-sdk

      # -------------------------------
      # 3. Download artifact from previous job
      # -------------------------------
    #  - name: Download artifact
     #   uses: actions/download-artifact@v4
      #  with:
       #   name: model_responses
        #  path: outputs/

      # -------------------------------
      # 4. Deploy to Salad
      # -------------------------------
    #  - name: Deploy to Salad
     #   env:
      #    SALAD_TOKEN: ${{ secrets.WEBHOOK_SECRET_KEY }}
       # run: salad deploy --gpu-type=RTX5














name: RAG CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # -------------------------------
      # 1. Checkout code
      # -------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4   # ✅ updated version (v3 deprecated)

      # -------------------------------
      # 2. Set up Python
      # -------------------------------
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # -------------------------------
      # 3. Install dependencies
      # -------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # -------------------------------
      # 4. Run tests
      # -------------------------------
      - name: Run pytest
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q

      # -------------------------------
      # 5. Clean workspace (free up space)
      # -------------------------------
      - name: Clean workspace
        run: |
          rm -rf outputs/*
          rm -rf .cache/*

      # -------------------------------
      # 6. Run RAG pipeline with HF login
      # -------------------------------
      - name: Run RAG pipeline with HF login
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          python -c "from huggingface_hub import login; login(token='$HF_TOKEN')"
          python rag_systems/run_rag_pipeline.py

      # -------------------------------
      # 7. Upload model_responses.csv as artifact
      # -------------------------------
      - name: Upload results
        uses: actions/upload-artifact@v4   # ✅ updated version (v3 deprecated)
        with:
          name: model_responses
          path: outputs/model_responses.csv

      # -------------------------------
      # 8. Deploy with Salad SDK
      # -------------------------------
      - name: Deploy with Salad SDK
        env:
          WEBHOOK_SECRET_KEY: ${{ secrets.WEBHOOK_SECRET_KEY }}
        run: |
          pip install --upgrade salad-cloud-sdk
          echo "✅ Salad SDK installed successfully."

          cat <<'EOF' > deploy_script.py
          import os
          from salad import SaladClient

          api_key = os.getenv("WEBHOOK_SECRET_KEY")
          if not api_key:
              raise ValueError("❌ Missing WEBHOOK_SECRET_KEY secret in GitHub Actions!")

          client = SaladClient(api_key=api_key)
          client.deploy(model="rag_system", gpu_type="RTX5090")

          print("✅ Deployment triggered successfully on SaladCloud!")
          EOF

          python deploy_script.py
